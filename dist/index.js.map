{"version":3,"sources":["../tmp/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","extractUrlDomain","url","document","createElement","href","hostParts","hostname","split","renderMember","container","template","member","applyJob","querySelector","renderedMember","insertAdjacentHTML","prismic","_","loadMembers","prismicQuery","Prismic","Predicates","at","then","response","results","getApi","api","memberList","getGroup","toArray","staffElement","consultantsElement","memberTplText","memberTpl","textContent","forEach","data","avatar","getImage","name","getText","position","link","getLink","asText","contact","charAt","toUpperCase","slice","./prismic","underscore","2","queryString","prismicApiPromise","prismicRef","parse","location","search","q","query","ref","prismic.io","query-string"],"mappings":"CAAA,QAAUA,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIK,GAAE,GAAIC,OAAM,uBAAuBN,EAAE,IAAK,MAAMK,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEX,EAAEG,IAAIS,WAAYb,GAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGS,QAAkD,IAAI,GAA1CL,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKa,GAAG,SAAST,EAAQU,EAAOJ,GAYvd,QAASK,GAAiBC,GACxB,GAAIb,GAAIc,SAASC,cAAc,IAC/Bf,GAAEgB,KAAOH,CACT,IAAII,GAAYjB,EAAEkB,SAASC,MAAM,IACjC,OAAOF,GAAUA,EAAUR,OAAS,GAGtC,QAASW,GAAaC,EAAWC,EAAUC,GACzC,GAAIC,GAAWH,EAAUI,cAAc,aACnCC,EAAiBJ,GAAUC,OAAQA,GACnCC,GACFA,EAASG,mBAAmB,cAAeD,GAE3CL,EAAUM,mBAAmB,YAAaD,GAxB9C,KAAME,GAAU3B,EAAQ,aAClB4B,EAAI5B,EAAQ,aAElB,IAAI6B,GAAc,SAASC,GACzB,MAAOA,IACLH,EAAQI,QAAQC,WAAWC,GAAG,gBAAiB,aAC9CC,KAAK,SAASC,GACf,MAAOA,GAASC,QAAQ,KAqB5BT,GAAQU,SACLH,KAAK,SAASI,GACbT,EAAYS,GACTJ,KAAK,SAASK,GACbA,EAAaA,EAAWC,SAAS,kBAAkBC,SACnD,IAAIC,GAAe7B,SAASW,cAAc,UACtCmB,EAAqB9B,SAASW,cAAc,gBAC5CoB,EAAgB/B,SAASW,cAAc,oBACvCqB,EAAYjB,EAAEP,SAASuB,EAAcE,YACzCP,GAAWQ,QAAQ,SAASzB,GAC1B,GAAI0B,IACFC,OAAQ3B,EAAO4B,SAAS,UAAUtC,IAClCuC,KAAM7B,EAAO8B,QAAQ,QACrBC,SAAU/B,EAAO8B,QAAQ,aAEvBE,EAAOhC,EAAOiC,QAAQ,eAC1B,IAAID,EAAM,CACRA,EAAOA,EAAKE,SACZR,EAAKM,KAAOA,CACZ,IAAIG,GAAU9C,EAAiB2C,EAC/BN,GAAKS,QAAUA,EAAQC,OAAO,GAAGC,cAAgBF,EAAQG,MAAM,GAEjE,OAAQtC,EAAO8B,QAAQ,SACrB,IAAK,aACHjC,EAAawB,EAAoBE,EAAWG,EAC5C,MACF,KAAK,QACH7B,EAAauB,EAAcG,EAAWG,YAMjDa,YAAY,EAAEC,WAAa,eAAeC,GAAG,SAAS/D,EAAQU,EAAOJ,GACxE,KAAMyB,GAAU/B,EAAQ,cAClBgE,EAAchE,EAAQ,eAE5B,IAAIiE,EAEJvD,GAAOJ,SACLyB,QAASA,EACTM,OAAQ,WAUN,MATK4B,KACHA,EAAoBlC,EAAQO,IAAI,uCAC7BJ,KAAK,SAASI,GACb,GAAI4B,GAAaF,EAAYG,MAAMC,SAASC,QAAe,KAC3D,OAAO,UAASC,GACd,MAAOhC,GAAIiC,MAAMD,GAAIE,IAAKN,QAI3BD,MAIRQ,aAAa,aAAaC,eAAe,sBAAsB","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nconst prismic = require('./prismic');\nconst _ = require('underscore');\n\nvar loadMembers = function(prismicQuery) {\n  return prismicQuery([\n    prismic.Prismic.Predicates.at('document.type', 'members')\n  ]).then(function(response) {\n    return response.results[0];\n  });\n};\n\nfunction extractUrlDomain(url) {\n  var a = document.createElement('a');\n  a.href = url;\n  var hostParts = a.hostname.split('.');\n  return hostParts[hostParts.length - 2];\n}\n\nfunction renderMember(container, template, member) {\n  var applyJob = container.querySelector('.applyJob');\n  var renderedMember = template({member: member});\n  if (applyJob) {\n    applyJob.insertAdjacentHTML('beforebegin', renderedMember)\n  } else {\n    container.insertAdjacentHTML('beforeend', renderedMember);\n  }\n}\n\nprismic.getApi()\n  .then(function(api) {\n    loadMembers(api)\n      .then(function(memberList) {\n        memberList = memberList.getGroup('members.member').toArray();\n        var staffElement = document.querySelector('.staff');\n        var consultantsElement = document.querySelector('.consultants');\n        var memberTplText = document.querySelector('.tpl-member-card');\n        var memberTpl = _.template(memberTplText.textContent);\n        memberList.forEach(function(member) {\n          var data = {\n            avatar: member.getImage('avatar').url,\n            name: member.getText('name'),\n            position: member.getText('position')\n          };\n          var link = member.getLink('profile-link');\n          if (link) {\n            link = link.asText();\n            data.link = link;\n            var contact = extractUrlDomain(link);\n            data.contact = contact.charAt(0).toUpperCase() + contact.slice(1);\n          }\n          switch (member.getText('type')) {\n            case 'consultant':\n              renderMember(consultantsElement, memberTpl, data);\n              break;\n            case 'staff':\n              renderMember(staffElement, memberTpl, data);\n              break;\n          }\n        });\n      })\n  });\n},{\"./prismic\":2,\"underscore\":\"underscore\"}],2:[function(require,module,exports){\nconst Prismic = require('prismic.io');\nconst queryString = require('query-string');\n\nvar prismicApiPromise;\n\nmodule.exports = {\n  Prismic: Prismic,\n  getApi: function() {\n    if (!prismicApiPromise) {\n      prismicApiPromise = Prismic.api('https://cargomediach.prismic.io/api')\n        .then(function(api) {\n          var prismicRef = queryString.parse(location.search)['token'];\n          return function(q) {\n            return api.query(q, {ref: prismicRef});\n          };\n        });\n    }\n    return prismicApiPromise;\n  }\n};\n\n},{\"prismic.io\":\"prismic.io\",\"query-string\":\"query-string\"}]},{},[1]);\n"]}